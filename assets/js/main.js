/**
 * RETRO-PC STORE v3.4.0 - Main JavaScript
 * –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–∞–π—Ç –¥–ª—è GitHub Pages / –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
 * –ë–µ–∑ —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
 */

(function() {
    'use strict';

    // Debug Mode (—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å false –¥–ª—è production)
    const DEBUG = false;
    const log = DEBUG ? console.log.bind(console) : () => {};

    log('üéÆ RETRO-PC STORE v3.4.0 - Initializing...');

    // ================================
    // –ì–õ–û–ë–ê–õ–¨–ù–´–ô –û–ë–™–ï–ö–¢ –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø
    // ================================
    window.retroApp = {
        version: '3.4.0',
        debug: DEBUG,
        mode: 'static',
        initialized: false,
        products: [],
        
        /**
         * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
         */
        init: function() {
            try {
                log('‚ö° Initializing Retro-PC Store...');
                
                // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ
                this.loadDemoProducts();
                
                // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ç–µ–º—ã
                this.setupThemeToggle();
                
                // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ wiki
                this.setupWikiModal();
                
                // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
                this.setupEventListeners();
                
                this.initialized = true;
                log('‚úÖ Retro-PC Store initialized successfully!');
                log('üì¶ Products loaded:', this.products.length);
            } catch (error) {
                console.error('‚ùå Initialization error:', error);
                throw error;
            }
        },

        /**
         * –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –∏–∑ fallback-data.js
         */
        loadDemoProducts: function() {
            try {
                log('üì¶ Loading demo products...');
                
                // –ò—Å–ø–æ–ª—å–∑—É–µ–º fallbackProducts –∏–∑ fallback-data.js
                if (window.fallbackProducts && window.fallbackProducts.length > 0) {
                    this.products = window.fallbackProducts;
                    log('‚úÖ Loaded', this.products.length, 'products from fallback data');
                    this.renderProducts(this.products);
                } else {
                    console.warn('‚ö†Ô∏è No fallback products found, loading inline demo data');
                    this.loadInlineDemoProducts();
                }
            } catch (error) {
                console.error('‚ùå Error loading products:', error);
                this.loadInlineDemoProducts();
            }
        },

        /**
         * –†–µ–∑–µ—Ä–≤–Ω—ã–µ –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–ª—É—á–∞–π –µ—Å–ª–∏ fallback-data.js –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª—Å—è
         */
        loadInlineDemoProducts: function() {
            this.products = [
                {
                    id: 'intel-8086',
                    title: "Intel 8086 CPU - Vintage 16-bit Processor (1978)",
                    currentPrice: "$89.99",
                    condition: "Used - Excellent",
                    brand: "Intel",
                    yearManufactured: "1978",
                    category: "cpu",
                    images: {
                        jpg: "assets/img/Intel_8086-2.jpg",
                        alt: "–ú–∏–∫—Ä–æ–ø—Ä–æ—Ü–µ—Å—Å–æ—Ä Intel 8086 16-–±–∏—Ç"
                    }
                },
                {
                    id: 'intel-8088',
                    title: "Intel 8088 CPU - IBM PC Compatible Processor",
                    currentPrice: "$75.50",
                    condition: "Used - Good",
                    brand: "Intel",
                    yearManufactured: "1979",
                    category: "cpu",
                    images: {
                        jpg: "assets/img/Intel_8088-2.jpg",
                        alt: "–ú–∏–∫—Ä–æ–ø—Ä–æ—Ü–µ—Å—Å–æ—Ä Intel 8088"
                    }
                },
                {
                    id: 'intel-8087',
                    title: "Intel 8087 Math Coprocessor FPU",
                    currentPrice: "$125.00",
                    condition: "Used - Very Good",
                    brand: "Intel",
                    yearManufactured: "1980",
                    category: "cpu",
                    images: {
                        jpg: "assets/img/Intel_8087.jpg",
                        alt: "Intel 8087 —Å–æ–ø—Ä–æ—Ü–µ—Å—Å–æ—Ä"
                    }
                }
            ];

            log('‚ö†Ô∏è Loaded fallback inline products:', this.products.length);
            this.renderProducts(this.products);
        },

        /**
         * –†–µ–Ω–¥–µ—Ä–∏–º —Ç–æ–≤–∞—Ä—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
         */
        renderProducts: function(products) {
            try {
                const container = document.getElementById('products-container');
                if (!container) {
                    console.error('‚ùå Products container not found!');
                    return;
                }

                // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
                container.innerHTML = '';

                // –ï—Å–ª–∏ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–µ—Ç - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                if (!products || products.length === 0) {
                    container.innerHTML = `
                        <div class="no-products-message">
                            –¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã –∏–ª–∏ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å.
                        </div>
                    `;
                    log('‚ö†Ô∏è No products to display');
                    return;
                }

                // –°–æ–∑–¥–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤
                const productsHTML = products.map(product => this.createProductCard(product)).join('');
                container.innerHTML = productsHTML;

                log('‚úÖ Rendered', products.length, 'product cards');
            } catch (error) {
                console.error('‚ùå Render error:', error);
            }
        },

        /**
         * –°–æ–∑–¥–∞–µ–º HTML –∫–∞—Ä—Ç–æ—á–∫—É —Ç–æ–≤–∞—Ä–∞
         */
        createProductCard: function(product) {
            // –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –¥–≤—É—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤ –¥–∞–Ω–Ω—ã—Ö
            const imageUrl = product.image || product.images?.jpg || product.images?.webp || product.images?.avif;
            const title = product.name || product.title;
            const price = product.price || product.currentPrice;
            const brand = product.brand || 'Intel';
            const year = product.year || product.yearManufactured;
            const imageAlt = product.images?.alt || title;
            
            // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º HTML –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–ª–∏ placeholder
            let imageHTML;
            if (imageUrl) {
                imageHTML = `
                    <div class="product-image">
                        <img src="${imageUrl}" 
                             alt="${imageAlt}" 
                             loading="lazy"
                             onerror="this.parentElement.innerHTML = window.retroApp.createImagePlaceholder('${title}');">
                    </div>`;
            } else {
                imageHTML = this.createImagePlaceholder(title);
            }

            return `
                <article class="product-card" data-product-id="${product.id}">
                    ${imageHTML}
                    
                    <div class="product-info">
                        <h3 class="product-title">${title}</h3>
                        
                        <div class="product-meta">
                            <span class="product-brand">üè≠ ${brand}</span>
                            <span class="product-year">üìÖ ${year}</span>
                        </div>
                        
                        <p class="product-description">${product.description || ''}</p>
                        
                        <div class="product-condition">
                            <span class="condition-badge">${product.condition || 'Unknown condition'}</span>
                        </div>
                        
                        <div class="product-footer">
                            <div class="product-price">${price}</div>
                        </div>
                        
                        <button class="product-button" onclick="window.retroApp.viewProduct('${product.id}')">
                            [–ü–†–û–°–ú–û–¢–† –î–ï–¢–ê–õ–¨–ù–û]
                        </button>
                    </div>
                </article>
            `;
        },

        /**
         * –°–æ–∑–¥–∞–µ–º HTML placeholder –¥–ª—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
         */
        createImagePlaceholder: function(title = '–¢–æ–≤–∞—Ä') {
            return `
                <div class="product-image-placeholder" role="img" aria-label="–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ: ${title}">
                    <div class="placeholder-content">
                        <span class="placeholder-icon">üñºÔ∏è</span>
                        <span class="placeholder-text">–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ<br>–Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ</span>
                    </div>
                </div>
            `;
        },

        /**
         * –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–≤–∞—Ä–µ
         */
        viewProduct: function(productId) {
            try {
                const product = this.products.find(p => p.id == productId);
                if (!product) {
                    console.warn('‚ö†Ô∏è Product not found:', productId);
                    return;
                }

                // –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –æ–±–æ–∏—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤ –¥–∞–Ω–Ω—ã—Ö
                const title = product.name || product.title;
                const price = product.price || product.currentPrice;
                const brand = product.brand || 'Intel';
                const year = product.year || product.yearManufactured;
                const imageUrl = product.image || product.images?.jpg || product.images?.webp;

                log('üëÅÔ∏è Viewing product:', title);
                
                // –°–æ–∑–¥–∞—ë–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
                const modal = document.createElement('div');
                modal.className = 'product-modal';
                modal.setAttribute('role', 'dialog');
                modal.setAttribute('aria-modal', 'true');
                modal.setAttribute('aria-labelledby', 'product-modal-title');
            
            modal.innerHTML = `
                <div class="product-modal-overlay" onclick="this.parentElement.remove()"></div>
                <div class="product-modal-content">
                    <button class="product-modal-close" onclick="this.closest('.product-modal').remove()" aria-label="–ó–∞–∫—Ä—ã—Ç—å">√ó</button>
                    
                    <div class="product-modal-body">
                        <div class="product-modal-image">
                            ${imageUrl ? `<img src="${imageUrl}" alt="${title}" loading="lazy">` : this.createImagePlaceholder(title)}
                        </div>
                        
                        <div class="product-modal-info">
                            <h3 id="product-modal-title">${title}</h3>
                            
                            <div class="product-modal-price">${price}</div>
                            
                            <div class="product-modal-details">
                                <p><strong>üè≠ –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å:</strong> ${brand}</p>
                                <p><strong>üìÖ –ì–æ–¥ –≤—ã–ø—É—Å–∫–∞:</strong> ${year}</p>
                                <p><strong>ÔøΩ –°–æ—Å—Ç–æ—è–Ω–∏–µ:</strong> ${product.condition}</p>
                                ${product.category ? `<p><strong>ÔøΩ –ö–∞—Ç–µ–≥–æ—Ä–∏—è:</strong> ${product.category}</p>` : ''}
                            </div>
                            
                            ${product.description ? `
                                <div class="product-modal-description">
                                    <h4>ÔøΩ –û–ø–∏—Å–∞–Ω–∏–µ:</h4>
                                    <p>${product.description}</p>
                                </div>
                            ` : ''}
                            
                            <div class="product-modal-notice">
                                ‚ö†Ô∏è –≠—Ç–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è. –¢–æ–≤–∞—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –ø–æ–∫—É–ø–∫–∏.
                            </div>
                            
                            <button class="product-modal-button" onclick="this.closest('.product-modal').remove()">
                                [–ó–ê–ö–†–´–¢–¨]
                            </button>
                        </div>
                    </div>
                </div>
            `;
            
            document.body.appendChild(modal);
            
            // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ ESC
            const closeOnEsc = (e) => {
                if (e.key === 'Escape') {
                    modal.remove();
                    document.removeEventListener('keydown', closeOnEsc);
                }
            };
            document.addEventListener('keydown', closeOnEsc);
            } catch (error) {
                console.error('‚ùå Error displaying product:', error);
            }
        },

        /**
         * –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ç–µ–º—ã
         */
        setupThemeToggle: function() {
            const themeToggle = document.getElementById('theme-toggle');
            if (!themeToggle) return;

            // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é —Ç–µ–º—É
            const savedTheme = localStorage.getItem('retro-theme') || 'green';
            this.setTheme(savedTheme);

            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
            themeToggle.addEventListener('click', () => {
                const currentTheme = document.documentElement.getAttribute('data-theme');
                const newTheme = currentTheme === 'green' ? 'amber' : 'green';
                this.setTheme(newTheme);
            });

            log('üé® Theme toggle initialized');
        },

        /**
         * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–º—É
         */
        setTheme: function(theme) {
            document.documentElement.setAttribute('data-theme', theme);
            localStorage.setItem('retro-theme', theme);
            
            const themeToggle = document.getElementById('theme-toggle');
            if (themeToggle) {
                themeToggle.textContent = theme === 'green' ? '[–Ø–ù–¢–ê–†–ù–ê–Ø –¢–ï–ú–ê]' : '[–ó–ï–õ–ï–ù–ê–Ø –¢–ï–ú–ê]';
            }
            
            log('üé® Theme set to:', theme);
        },

        /**
         * –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ Wiki
         */
        setupWikiModal: function() {
            const modal = document.getElementById('wiki-modal');
            if (!modal) return;

            // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
            modal.addEventListener('click', (e) => {
                if (e.target === modal) {
                    this.hideWiki();
                }
            });

            // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ ESC
            document.addEventListener('keydown', (e) => {
                if (e.key === 'Escape' && modal.getAttribute('aria-hidden') === 'false') {
                    this.hideWiki();
                }
            });

            log('üìñ Wiki modal initialized');
        },

        /**
         * –ü–æ–∫–∞–∑—ã–≤–∞–µ–º Wiki
         */
        showWiki: function() {
            const modal = document.getElementById('wiki-modal');
            if (modal) {
                modal.setAttribute('aria-hidden', 'false');
                modal.style.display = 'flex';
                document.body.style.overflow = 'hidden';
                log('üìñ Wiki opened');
            }
        },

        /**
         * –°–∫—Ä—ã–≤–∞–µ–º Wiki
         */
        hideWiki: function() {
            const modal = document.getElementById('wiki-modal');
            if (modal) {
                modal.setAttribute('aria-hidden', 'true');
                modal.style.display = 'none';
                document.body.style.overflow = '';
                log('üìñ Wiki closed');
            }
        },

        /**
         * –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
         */
        setupEventListeners: function() {
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Å—ã–ª–æ–∫ "Skip to content"
            const skipLink = document.querySelector('.skip-link');
            if (skipLink) {
                skipLink.addEventListener('click', (e) => {
                    e.preventDefault();
                    const target = document.getElementById('main-content');
                    if (target) {
                        target.focus();
                        target.scrollIntoView({ behavior: 'smooth' });
                    }
                });
            }

            // –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤
            const searchInput = document.getElementById('product-search');
            if (searchInput) {
                searchInput.addEventListener('input', (e) => {
                    this.filterProducts();
                });
            }
            
            // –§–∏–ª—å—Ç—Ä –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            const categoryFilter = document.getElementById('category-filter');
            if (categoryFilter) {
                categoryFilter.addEventListener('change', () => {
                    this.filterProducts();
                });
            }
            
            // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞
            const sortSelect = document.getElementById('sort-select');
            if (sortSelect) {
                sortSelect.addEventListener('change', () => {
                    this.filterProducts();
                });
            }
            
            // –ö–Ω–æ–ø–∫–∞ —Å–±—Ä–æ—Å–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤
            const resetButton = document.getElementById('reset-filters');
            if (resetButton) {
                resetButton.addEventListener('click', () => {
                    this.resetFilters();
                });
            }

            log('üéØ Event listeners initialized');
        },

        /**
         * –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤
         */
        filterProducts: function() {
            try {
                const searchTerm = document.getElementById('product-search')?.value.toLowerCase() || '';
                const categoryFilter = document.getElementById('category-filter')?.value || 'all';
                const sortOption = document.getElementById('sort-select')?.value || 'default';
                
                // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–≤–∞—Ä—ã
                let filteredProducts = this.products.filter(product => {
                    const title = (product.name || product.title || '').toLowerCase();
                    const description = (product.description || '').toLowerCase();
                    const category = product.category || 'other';
                    
                    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–∏—Å–∫–∞
                    const matchesSearch = searchTerm === '' || 
                                        title.includes(searchTerm) || 
                                        description.includes(searchTerm);
                    
                    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                    const matchesCategory = categoryFilter === 'all' || category === categoryFilter;
                    
                    return matchesSearch && matchesCategory;
                });
                
                // –°–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–æ–≤–∞—Ä—ã
                filteredProducts = this.sortProducts(filteredProducts, sortOption);
                
                // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
                this.renderProducts(filteredProducts);
                
                // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫
                this.updateProductCount(filteredProducts.length, this.products.length);
                
                log(`üîç Filtered: ${filteredProducts.length} of ${this.products.length} products`);
            } catch (error) {
                console.error('‚ùå Error filtering products:', error);
            }
        },

        /**
         * –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤
         */
        sortProducts: function(products, sortOption) {
            const sorted = [...products];
            
            switch(sortOption) {
                case 'price-asc':
                    sorted.sort((a, b) => this.getNumericPrice(a) - this.getNumericPrice(b));
                    break;
                case 'price-desc':
                    sorted.sort((a, b) => this.getNumericPrice(b) - this.getNumericPrice(a));
                    break;
                case 'year-asc':
                    sorted.sort((a, b) => this.getYear(a) - this.getYear(b));
                    break;
                case 'year-desc':
                    sorted.sort((a, b) => this.getYear(b) - this.getYear(a));
                    break;
                case 'name-asc':
                    sorted.sort((a, b) => {
                        const nameA = (a.name || a.title || '').toLowerCase();
                        const nameB = (b.name || b.title || '').toLowerCase();
                        return nameA.localeCompare(nameB);
                    });
                    break;
                case 'name-desc':
                    sorted.sort((a, b) => {
                        const nameA = (a.name || a.title || '').toLowerCase();
                        const nameB = (b.name || b.title || '').toLowerCase();
                        return nameB.localeCompare(nameA);
                    });
                    break;
                default:
                    // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é - –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫
                    break;
            }
            
            return sorted;
        },

        /**
         * –ü–æ–ª—É—á–∞–µ–º —á–∏—Å–ª–æ–≤—É—é —Ü–µ–Ω—É –∏–∑ —Å—Ç—Ä–æ–∫–∏
         */
        getNumericPrice: function(product) {
            const priceStr = product.price || product.currentPrice || '0';
            const match = priceStr.match(/[\d.]+/);
            return match ? parseFloat(match[0]) : 0;
        },

        /**
         * –ü–æ–ª—É—á–∞–µ–º –≥–æ–¥ –≤—ã–ø—É—Å–∫–∞
         */
        getYear: function(product) {
            return parseInt(product.year || product.yearManufactured || '0');
        },

        /**
         * –°–±—Ä–æ—Å –≤—Å–µ—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤
         */
        resetFilters: function() {
            const searchInput = document.getElementById('product-search');
            const categoryFilter = document.getElementById('category-filter');
            const sortSelect = document.getElementById('sort-select');
            
            if (searchInput) searchInput.value = '';
            if (categoryFilter) categoryFilter.value = 'all';
            if (sortSelect) sortSelect.value = 'default';
            
            this.filterProducts();
            log('üîÑ Filters reset');
        },

        /**
         * –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ —Ç–æ–≤–∞—Ä–æ–≤
         */
        updateProductCount: function(shown, total) {
            const countElement = document.getElementById('product-count');
            if (countElement) {
                if (shown === total) {
                    countElement.textContent = `–ü–æ–∫–∞–∑–∞–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: ${total}`;
                } else {
                    countElement.textContent = `–ü–æ–∫–∞–∑–∞–Ω–æ ${shown} –∏–∑ ${total} —Ç–æ–≤–∞—Ä–æ–≤`;
                }
            }
        },

        /**
         * –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
         */
        getAppStatus: function() {
            const status = {
                version: this.version,
                mode: this.mode,
                initialized: this.initialized,
                productsCount: this.products.length,
                theme: document.documentElement.getAttribute('data-theme'),
                timestamp: new Date().toISOString()
            };
            
            console.table(status);
            return status;
        }
    };

    // ================================
    // –ì–õ–û–ë–ê–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò
    // ================================

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å Wiki (–≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑ HTML)
     */
    window.showWiki = function() {
        window.retroApp.showWiki();
    };

    /**
     * –°–∫—Ä—ã—Ç—å Wiki (–≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑ HTML)
     */
    window.hideWiki = function() {
        window.retroApp.hideWiki();
    };

    /**
     * –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–∑–¥–µ–ª–æ–≤ Wiki (–≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑ HTML)
     */
    window.showWikiSection = function(sectionId) {
        // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ —Ä–∞–∑–¥–µ–ª—ã
        const sections = document.querySelectorAll('.wiki-section');
        sections.forEach(section => {
            section.classList.remove('active');
        });

        // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å–æ –≤—Å–µ—Ö –≤–∫–ª–∞–¥–æ–∫
        const tabs = document.querySelectorAll('.wiki-tab');
        tabs.forEach(tab => {
            tab.classList.remove('active');
        });

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–∞–∑–¥–µ–ª
        const targetSection = document.getElementById(`wiki-${sectionId}`);
        if (targetSection) {
            targetSection.classList.add('active');
        }

        // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –≤–∫–ª–∞–¥–∫—É
        const activeTab = Array.from(tabs).find(tab => 
            tab.getAttribute('onclick')?.includes(sectionId)
        );
        if (activeTab) {
            activeTab.classList.add('active');
        }

        log(`üìñ Wiki section switched to: ${sectionId}`);
    };

    // ================================
    // –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ü–†–ò –ó–ê–ì–†–£–ó–ö–ï
    // ================================

    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', () => {
            window.retroApp.init();
        });
    } else {
        // DOM —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω
        window.retroApp.init();
    }

    log('üéÆ Main script loaded, waiting for DOM...');

})();
